version: "3.7"
services:

  traefik:
    image: traefik:latest
    command:
      - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--defaultentrypoints=http,https"
      - "--logLevel=debug"
      - "--api"
      - "--ping"
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.domain=swarm.mydomain.com"
      - "--docker.watch"
      - "--acme"
      - "--acme.acmelogging=true"
      - "--acme.storage=/data/acme.json" # stores certificates on the 'traefikdata' docker volume
      - "--acme.email=admin@mydomain.com"
      - "--acme.entrypoint=https"
      - "--acme.httpchallenge"
      - "--acme.httpchallenge.entrypoint=http"
      - "--acme.onhostrule=true"
      # - "--acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" # staging cs server
    networks:
      - core
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "traefikdata:/data"
      # - ${PWD}/config/acme.json:/acme.json # Replace ${PWD} with absolute path to the location of this file. Used if you need to import old acme data.
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role==manager]
      labels:
        - "traefik.enable=true"
        - "traefik.port=8080"
        - "traefik.tags=monitoring"
        - "traefik.backend.loadbalancer.stickiness=true"
        - "traefik.frontend.auth.basic.users=admin:$$apr1$$n1bbUNye$$NKXD5zW0KzrZm2jMm5gbz0"
        - "traefik.docker.network=traefik-services_core"
        - "traefik.frontend.rule=Host:traefik.swarm.mydomain.com"
        - "traefik.frontend.headers.SSLHost=traefik.swarm.mydomain.com"
        - traefik.frontend.entryPoints=https
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSPreload=true
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.headers.browserXSSFilter=true"
        - "traefik.frontend.headers.contentTypeNosniff=true"
        - "traefik.frontend.headers.frameDeny=false"
 
  portainer:
    image: portainer/portainer
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainerdata:/data"
    networks:
      - core
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.port=9000"
        - "traefik.docker.network=traefik-services_core"
        - "traefik.frontend.rule=Host:portainer.swarm.mydomain.com"
        - "traefik.frontend.headers.SSLHost=portainer.swarm.mydomain.com"
        - traefik.frontend.entryPoints=https
        - traefik.frontend.headers.forceSTSHeader=true
        - traefik.frontend.headers.STSSeconds=315360000
        - traefik.frontend.headers.STSPreload=true
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.headers.browserXSSFilter=true"
        - "traefik.frontend.headers.contentTypeNosniff=true"
        - "traefik.frontend.headers.frameDeny=false"

networks:
  core:
    driver: overlay
    driver_opts:
      encrypted: 1
 
volumes:
  portainerdata:
  traefikdata: